#ifndef __BAR_H__
#define __BAR_H__


typedef struct ball {
	int x, y;
	movement_t mov;
} ball_t;

/**
 * Initializes the ball object with the given bar position.
 *
 * @param ball The ball object to be initialized.
 * @param bar_pos The position of the bar.
 */
void init_ball(ball_t *ball, position_t *bar_pos);

/**
 * @brief Moves the ball on the game board.
 *
 * This function updates the position of the ball based on its current velocity and checks for collisions with the bar and the walls of the game board.
 *
 * @param ball Pointer to the ball object.
 * @param bar_pos Pointer to the position of the bar.
 * @param map Pointer to the game map.
 * @return The game status after moving the ball.
 */
game_status_t move_ball(ball_t *ball, position_t *bar_pos, map_t *map);

/**
 * Calculates the rebound of a ball based on the given parameters.
 *
 * @param ball      Pointer to the ball object.
 * @param side      The side of the collision.
 * @param is_block  Indicates if the collision is with a block.
 * @param block     The block object involved in the collision.
 * @param next_pos  Pointer to the next position of the ball after the rebound.
 * @param bar_pos   Pointer to the position of the bar.
 *
 * @return The movement type of the rebound.
 */
movement_t calculate_rebound(ball_t *ball, side_t side, bool is_block, block_t block, position_t *next_pos, position_t *bar_pos);

#endif
